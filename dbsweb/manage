#! /bin/bash

case $(id -un) in cmsweb ) echo "ERROR: please use another account" 1>&2; exit 1;; esac

#######################################################
# DBS Discovery management script
# Author: Ignas Butenas, contact if needed by email: ignas.butenas@cern.ch
#######################################################
# Setting the basic and common variables.
# Make sure that these are up to date.
# If need a new variable, it must be defined here.
# Use export if you really need this!
#######################################################
SERVICE_TITLE="DBS Discovery"
TWIKI_PAGE="https://twiki.cern.ch/twiki/bin/view/CMS/DBS2_discovery#Start_Stop_Restart_Data_Discover"
HOST=$(hostname -s | tr '[:upper:]' '[:lower:]')

#######################################################
# Sourcing the environment and usefull things
#######################################################

cd $(dirname $(dirname $0))
. app/etc/profile.d/init.sh
LOGDIR=$PWD/logs

# define authentication security.ini location
export SEC_MOD_INI=/data/projects/conf/sitedb/security.ini

port=$(cat $PWD/config/DBSDD.conf | grep -i "port=" | tail -1 | sed "s/PORT=//g")
url=$(cat $PWD/config/DBSDD.conf  | grep -i "^URL=" | tail -1 | sed "s/URL=//g")
pidfile=$(cat $PWD/config/DBSDD.conf | grep -i "pidfile=" | tail -1 | sed "s/PIDFILE=//g")
cmd="cmsWeb --base-url=$url --port=$port --default-page /DDServer --pid-file $pidfile"

#######################################################
# Function for the main actions.
# If using the variable here, need to define it in the
# top part of the script, to keep them in one place.
#######################################################

# Function to start the service conditionally on crond restart
function sysboot {
  if [ $(pgrep -u $(id -u) -f "[/]DDServer" | wc -l) = 0 ]; then
    start
  fi
}

# Function which is used to start the service
function start {
  echo "Starting the $SERVICE_TITLE"
  cd $DBS_WEB_ROOT/lib/python2.6/site-packages
  export DDHOME=$PWD
  export DBS_DBPARAM=$DDHOME/Templates/DBParam
  export DBS_CLIENT_ROOT
  export WEBTOOLS_ROOT
  export YUI_ROOT
  export PYTHONPATH=$DDHOME:$DDHOME/QueryBuilder:$ELEMENTTREE_ROOT/share/lib/python`echo $PYTHON_VERSION | cut -d. -f1,2`/site-packages:$PYTHONPATH
  nohup $cmd </dev/null 2>&1 | rotatelogs $LOGDIR/dbsweb-%Y%m%d.log 86400 >/dev/null 2>&1 &
}

# Function which is used to stop the service
function stop {
  echo "Stopping the $SERVICE_TITLE"
  pid=$(pgrep -u $(id -u) -f "cmsWeb.*=$port.*[/]DDServer")
  if [ X"$pid" != X ]; then
    kill -9 $pid
  fi
}

# Function to chack the status of the process
function status {
  pid=$(pgrep -u $(id -u) -f "cmsWeb.*=$port.*[/]DDServer")
  if [ X"$pid" != X ]; then
    echo "$SERVICE_TITLE is RUNNING, pid=$pid"
    ps auxw | grep cmsWeb | grep DDServer | grep -v grep | grep $port
  else
    echo "$SERVICE_TITLE is NOT RUNNING"
  fi
}

#######################################################
# Function to provide the help for the user
# To edit the help provided, edit lines with the ##H prefix
#######################################################
##H Available actions:
##H   sysboot - start server from crond if not running
##H   status - show current service's status
##H   start - start the service
##H   stop - stop the service
##H   restart - restart the service
##H   version - get current version of the service
##H Security string - string needed to perform actions, see twiki page
#######################################################
function help {
  echo "$SERVICE_TITLE management script"
  echo "Usage: $0 status|start|stop|restart|help|version security_string"
  echo "For more details, check the Twiki page: $TWIKI_PAGE"
  perl -ne '/^##H / && do { s/^##H ?//; print }' < $0
}

# Function to check the security string.
function check {
  CHECK=$(echo "$1" | md5sum | awk '{print $1}')
  if [ $CHECK != 94e261a5a70785552d34a65068819993 ]; then
    echo "$0: cannot complete operation, please check documentation."
    exit 2;
  fi
}

#######################################################
# The engine of the script. The place where the
# script reacts to the actions.
# Params: $1 - action
#         $2 - security string
#######################################################

case $1 in
  sysboot)
    if ps -oargs= $PPID | grep -q -e crond; then
      sysboot
    else
      echo "$0: sysboot is for cron only" 1>&2
      exit 1
    fi
    ;;
  start | restart)
    check "$2"
    stop
    start
    status
    ;;
  status)
    status
    ;;
  stop)
    check "$2"
    stop
    status
    ;;
  help)
    help
    ;;
  version)
    echo "Management script for $SERVICE_TITLE $DBS_WEB_VERSION."
    ;;
  * )
    echo "$0: unknown action '$1', please try '$0 help' or documentation." 1>&2
    exit 1 ;;
esac
