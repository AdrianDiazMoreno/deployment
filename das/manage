#! /bin/bash

case $(id -un) in cmsweb ) echo "ERROR: please use another account" 1>&2; exit 1;; esac

#######################################################
# DAS management script
#######################################################
# Setting the basic and common variables.
# Make sure that these are up to date.
# If need a new variable, it must be defined here.
# Use export if you really need this!
#######################################################

ME=$(basename $(dirname $0))
TOP=$(cd $(dirname $0)/../../.. && pwd)
ROOT=$(cd $(dirname $0)/../.. && pwd)
CFGDIR=$(dirname $0)
LOGDIR=$TOP/logs/$ME
STATEDIR=$TOP/state/$ME
SERVICE_TITLE="DAS"
TWIKI_PAGE="https://twiki.cern.ch/twiki/bin/view/CMS/DASOperation"
. $ROOT/apps/$ME/etc/profile.d/init.sh
cd $STATEDIR

export DAS_ROOT YUI_ROOT
export PYTHONUNBUFFERED=1
export DAS_PYTHONPATH=$DAS_ROOT/lib/python2.6/site-packages
export DAS_JSPATH=$DAS_ROOT/lib/python2.6/site-packages/src/js
export DAS_CSSPATH=$DAS_ROOT/lib/python2.6/site-packages/src/css
export DAS_TMPLPATH=$DAS_ROOT/lib/python2.6/site-packages/src/templates
export DAS_IMAGESPATH=$DAS_ROOT/lib/python2.6/site-packages/src/images
export X509_USER_PROXY=$STATEDIR/proxy/proxy.cert
export X509_USER_CERT=$X509_USER_PROXY
export X509_USER_KEY=$X509_USER_PROXY
export DAS_CONFIG=$CFGDIR/das_cms.py
export DAS_ANALYTICS=$CFGDIR/analytics_cfg.py

#######################################################
# Function for the main actions.
# If using the variable here, need to define it in the
# top part of the script, to keep them in one place.
#######################################################

# Function to start the service conditionally on crond restart
function sysboot {
  dostart=false
  for pat in cache web; do
    if [ $(pgrep -u $(id -u) -f "[/]das_server.py.*=$pat" | wc -l) = 0 ]; then
      dostart=true
    fi
  done
  if [ $(pgrep -u $(id -u) -f "[/]analytics_controller.py" | wc -l) = 0 ]; then
    dostart=true
  fi
  $dostart && { start; start_analytics; }
}

# Function which is used to start the service
function start {
  echo "Starting the $SERVICE_TITLE"
  for pat in cache web; do
    python -u $DAS_PYTHONPATH/DAS/web/das_server.py --server=$pat \
       </dev/null 2>&1 | rotatelogs $LOGDIR/das-$pat-%Y%m%d.log 86400 >/dev/null 2>&1 &
  done
}

function start_analytics {
  echo "Starting the $SERVICE_TITLE analytics"
  python -u $DAS_PYTHONPATH/DAS/analytics/analytics_controller.py $DAS_ANALYTICS \
       </dev/null 2>&1 | rotatelogs $LOGDIR/das-analytics-%Y%m%d.log 86400 >/dev/null 2>&1 &
}

# Function which is used to stop the service
function stop {
  echo "Stopping the $SERVICE_TITLE"
  for pat in web cache; do
    for pid in $(pgrep -u $(id -u) -f "[/]das_server.py.*=$pat"); do
      kill -9 $pid
    done
  done
}

function stop_analytics {
  echo "Stopping the $SERVICE_TITLE analytics"
  for pid in $(pgrep -u $(id -u) -f "[/]analytics_controller.py"); do
    kill -9 $pid
  done
}

# Function to chack the status of the process
function status {
    for pat in cache web analytics; do
        if  [ $pat == "cache" ]; then
            pid=$(pgrep -u $(id -u) -f "[/]das_server.py.*=cache")
        elif [ $pat == "web" ]; then
            pid=$(pgrep -u $(id -u) -f "[/]das_server.py.*=web")
        elif [ $pat == "analytics" ]; then
            pids=$(pgrep -u $(id -u) -f "[/]analytics_controller.py")
            pid=`echo $pids | tr '\n' ' '`
        fi
        if [ x"$pid" = x ]; then
            echo "DAS $pat is not running"
        else
            echo "DAS $pat is running, PID $pid"
        fi
    done
}

# Function to provide the help for the user
function help {
  echo "$SERVICE_TITLE management script"
  echo "Usage: $0 status|start|stop|restart|run|help|version security_string"
  echo "For more details, check the Twiki page: $TWIKI_PAGE"
}

# Function to check the security string.
function check {
  CHECK=$(echo "$1" | md5sum | awk '{print $1}')
  if [ $CHECK != 94e261a5a70785552d34a65068819993 ]; then
    echo "$0: cannot complete operation, please check documentation."
    exit 2;
  fi
}

#######################################################
# The engine of the script. The place where the
# script reacts to the actions.
# Params: $1 - action
#         $2 - security string
#######################################################

case $1 in
  sysboot)
    if ps -oargs= $PPID | grep -q -e crond; then
      sysboot
    else
      echo "$0: sysboot is for cron only" 1>&2
      exit 1
    fi
    ;;
  start)
    check "$2"
    stop
    start
    stop_analytics
    start_analytics
    status
    ;;
  schema)
    check "$2"
    schema
    ;;
  restart)
    check "$2"
    stop
    start "restart"
    stop_analytics
    start_analytics
    status
    ;;
  status)
    status
    ;;
  stop)
    check "$2"
    stop
    stop_analytics
    status
    ;;
  help)
    help
    ;;
  version)
    echo "Management script for $SERVICE_TITLE $DAS_VERSION."
    ;;
  * )
    echo "$0: unknown action '$1', please try '$0 help' or documentation." 1>&2
    exit 1 ;;
esac

