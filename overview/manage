#! /bin/bash

case $(id -un) in cmsweb ) echo "ERROR: please use another account" 1>&2; exit 1;; esac

# Overview management script

ME=$(basename $(dirname $0))
TOP=$(cd $(dirname $0)/../../.. && pwd)
ROOT=$(cd $(dirname $0)/../.. && pwd)
CFGDIR=$(dirname $0)
LOGDIR=$TOP/logs/$ME
STATEDIR=$TOP/state/$ME
SERVICE_TITLE="Overview"
TWIKI_PAGE="https://twiki.cern.ch/twiki/bin/view/CMS/OverviewDeployment#Other_server_operation"
CFGFILE=$CFGDIR/server-conf.py
. $ROOT/apps/overview/etc/profile.d/env.sh
export OVERVIEW_ROOT

# Function to start the service conditionally on crond restart
function sysboot {
  if [ $(pgrep -u $(id -u) -f "[/]ovGui $CFGFILE" | wc -l) = 0 ]; then
    start
  fi
}

# Function to start the service
function start {
  cd $STATEDIR
  ovControl start all from $CFGFILE
}

# Function to stop the service
function stop {
  ovControl stop all from $CFGFILE
}

# Function to chack the status of the process
function status {
  PIDS=$(pgrep -u $(id -u) -f "[/]ovGui $CFGFILE")
  if [ X"$PIDS" != X ]; then
    echo "$SERVICE_TITLE is RUNNING, PID:" $PIDS
  else
    echo "$SERVICE_TITLE is NOT RUNNING."
  fi
}

#######################################################
# Function to provide the help for the user
# To edit the help provided, edit lines with the ##H prefix
#######################################################
##H Available actions:
##H   sysboot - start server from crond if not running
##H   status - show current service's status
##H   start - start the service
##H   stop - stop the service
##H   restart - restart the service
##H   version - get current version of the service
##H Security string - string needed to perform actions, see twiki page
#######################################################
function help {
  echo "$SERVICE_TITLE management script"
  echo "Usage: $0 status|start|stop|restart|help|version security_string"
  echo "For more details, check the Twiki page: $TWIKI_PAGE"
  perl -ne '/^##H / && do { s/^##H ?//; print }' < $0
}

# Function to check the security string.
function check {
  CHECK=$(echo "$1" | md5sum | awk '{print $1}')
  if [ $CHECK != 94e261a5a70785552d34a65068819993 ]; then
    echo "$0: cannot complete operation, please check documentation."
    exit 2;
  fi
}

#######################################################
# The engine of the script. The place where the
# script reacts to the actions.
# Params: $1 - action
#         $2 - security string
#######################################################

case $1 in
  sysboot)
    if ps -oargs= $PPID | grep -q -e crond; then
      sysboot
    else
      echo "$0: sysboot is for cron only" 1>&2
      exit 1
    fi
    ;;
  start | restart)
    check "$2"
    stop
    start
    status
    ;;
  status)
    status
    ;;
  stop)
    check "$2"
    stop
    status
    ;;
  help)
    help
    ;;
  version)
    echo "Management script for $SERVICE_TITLE $T0MON_VERSION."
    ;;
  *)
    echo "$0: unknown action '$1', please try '$0 help' or documentation." 1>&2
    exit 1 ;;
esac
